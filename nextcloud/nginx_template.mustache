#location ^~ /.well-known {
#  # The following 6 rules are borrowed from `.htaccess`
#
#  # The following 2 rules are only needed for the user_webfinger app.
#  # Uncomment it if you're planning to use this app.
#  #rewrite ^/\.well-known/host-meta\.json  {{{root_path}}}/public.php?service=host-meta-json  last;
#  #rewrite ^/\.well-known/host-meta        {{{root_path}}}/public.php?service=host-meta       last;
#  # The following 2 rules are only needed for the Social app.
#  # Uncomment it if you're planning to use this app.
#  #rewrite ^/\.well-known/webfinger        {{{root_path}}}/public.php?service=webfinger       last;
#  #rewrite ^/\.well-known/nodeinfo         {{{root_path}}}/public.php?service=nodeinfo        last;
#
#  location = /.well-known/carddav     { return 301 {{{root_path}}}/remote.php/dav/; }
#  location = /.well-known/caldav      { return 301 {{{root_path}}}/remote.php/dav/; }
#
#  try_files $uri $uri/ =404;
#}

alias /usr/share/nextcloud-server/;

# Add headers to serve security related headers
add_header Referrer-Policy                      "no-referrer"   always;
add_header X-Content-Type-Options               "nosniff"       always;
add_header X-Download-Options                   "noopen"        always;
add_header X-Frame-Options                      "SAMEORIGIN"    always;
add_header X-Permitted-Cross-Domain-Policies    "none"          always;
add_header X-Robots-Tag                         "none"          always;
add_header X-XSS-Protection                     "1; mode=block" always;

# Set max upload size
client_max_body_size 10G;
fastcgi_buffers 64 4K;

# Enable gzip but do not remove ETag headers
gzip on;
gzip_vary on;
gzip_comp_level 4;
gzip_min_length 256;
gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

# Pagespeed is not supported by Nextcloud, so if your server is built
# with the `ngx_pagespeed` module, uncomment this line to disable it.
#pagespeed off;

# Remove X-Powered-By, which is an information leak
fastcgi_hide_header X-Powered-By;

# Specify how to handle directories -- specifying `/nextcloud/index.php$request_uri`
# here as the fallback means that Nginx always exhibits the desired behaviour
# when a client requests a path that corresponds to a directory that exists
# on the server. In particular, if that directory contains an index.php file,
# that file is correctly served; if it doesn't, then the request is passed to
# the front-end controller. This consistent behaviour means that we don't need
# to specify custom rules for certain paths (e.g. images and other assets,
# `/updater`, `/ocm-provider`, `/ocs-provider`), and thus
# `try_files $uri $uri/ /nextcloud/index.php$request_uri`
# always provides the desired behaviour.
index index.php index.html {{{root_path}}}/index.php$request_uri;

# Default Cache-Control policy
expires 1m;

# Rule borrowed from `.htaccess` to handle Microsoft DAV clients
location = {{{root_path}}}/ {
    if ( $http_user_agent ~ ^DavClnt ) {
        return 302 {{{root_path}}}/remote.php/webdav/$is_args$args;
    }
}

location = {{{root_path}}}/robots.txt {
  allow all;
  log_not_found off;
  access_log off;
}

# Rules borrowed from `.htaccess` to hide certain paths from clients
location ~ ^{{{root_path}}}/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)    { return 404; }
location ~ ^{{{root_path}}}/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

# Ensure this block, which passes PHP files to the PHP process, is above the blocks
# which handle static assets (as seen below). If this block is not declared first,
# then Nginx will encounter an infinite rewriting loop when it prepends
# `/nextcloud/index.php` to the URI, resulting in a HTTP 500 error response.
location ~ \.php(?:$|/) {
  fastcgi_split_path_info ^(.+?\.php)(/.*)$;
  set $path_info $fastcgi_path_info;
  try_files $fastcgi_script_name =404;
  include fastcgi_params;

  fastcgi_param SCRIPT_FILENAME $request_filename;
  fastcgi_param PATH_INFO $path_info;
  fastcgi_param HTTPS $https;
  fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
  fastcgi_param front_controller_active true;     # Enable pretty urls
  fastcgi_pass unix:/run/php/selfhost-nextcloud-server-system.sock;
  fastcgi_intercept_errors on;
}

location ~ \.(?:css|js|svg|gif)$ {
  try_files $uri / {{{root_path}}}/index.php$request_uri;
  expires 6M;         # Cache-Control policy borrowed from `.htaccess`
  access_log off;     # Optional: Don't log access to assets
}

location ~ \.woff2?$ {
  try_files $uri / {{{root_path}}}/index.php$request_uri;
  expires 7d;         # Cache-Control policy borrowed from `.htaccess`
  access_log off;     # Optional: Don't log access to assets
}

location ~ / {
  if ($request_method ~ ^PUT$) {
      rewrite ^ {{{root_path}}}/index.php$request_uri last;
  }
  if ($request_method ~ ^DELETE$) {
      rewrite ^ {{{root_path}}}/index.php$request_uri last;
  }
  try_files $uri / {{{root_path}}}/index.php$request_uri;
}
